apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prometheus-statefulset
  namespace: monitoring
spec:
  replicas: 2
  selector:
    matchLabels:
      app: prometheus
  serviceName: "prometheus-service"
  template:
    metadata:
      labels:
        app: prometheus
      annotations:
        prometheus.io/scrape: "true"
    spec:
      securityContext:
        runAsUser: 1000
        fsGroup: 2000
        runAsNonRoot: true
      containers:
      - name: prometheus-cont
        image: quay.io/prometheus/prometheus
        args:
          - --config.file=/etc/prometheus/prometheus.yml
          - --storage.tsdb.path=/data
          - --web.enable-lifecycle
        volumeMounts:
        - name: config-volume
          mountPath: /etc/prometheus/prometheus.yml
          subPath: prometheus.yml
        - name: prometheus-data
          mountPath: /data
          subPath: ""
        ports:
        - containerPort: 9090
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 30
          timeoutSeconds: 30
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 30
          timeoutSeconds: 30
        resources:
          requests:
            cpu: 200m
            memory: 1000Mi
      volumes:
      - name: config-volume
        configMap:
          name: prometheus-config
      serviceAccountName: prometheus
  volumeClaimTemplates:
  - metadata:
      name: prometheus-data
      labels:
        app: prometheus
    spec:
      storageClassName: openebs-global
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 8Gi