---
- hosts: all
  remote_user: k8s
  become: yes
  vars_files:
    - vars.yml

  tasks:
  - name: Installation paquets de base
    apt:
      name:
        - apt-transport-https
        - curl
      state: latest

  - name: Commande modprobe
    command: | 
      cat <<EOF | sudo tee /etc/modules
      overlay
      br_netfilter
      EOF

  - name: Configuration paramètre systemctl
    command: | 
      cat <<EOF | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf
      net.bridge.bridge-nf-call-iptables  = 1
      net.ipv4.ip_forward                 = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      EOF

  - name: Ajout des clés GPG des repos
    apt-key: 
      url: "{{item}}"
    loop:
      - "https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/{{crio.os}}/Release.key"
      - "https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:{{crio.version}}/{{crio.os}}/Release.key"
      - "https://packages.cloud.google.com/apt/doc/apt-key.gpg"

  - name: Installation repository
    apt_repository:
      repo: "{{item}}"
      state: present
    loop:
      - "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/{{crio.os}}/"
      - "deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/{{crio.version}}/{{crio.os}}/"
      - "deb https://apt.kubernetes.io/ kubernetes-xenial main "

  - name: Installation cri-o et binaires kubernetes
    apt:
      name:
        - cri-o={{crio.version}}
        - cri-o-runc={{crio.version}}
        - kubelet={{kubelet.version}}
        - kubeadm={{kubelet.version}}
        - kubectl={{kubelet.version}}
      state: present

  - name: Marquage des paquets pour les binaires kubernetes
    dpkg_selections:
      name: "{{item}}"
      selection: hold
    loop:
      - kubeadm
      - kubelet
      - kubectl

  - name: Configuration de kubelet
      command: |
      cat <<EOF >/var/lib/kubelet/config.yaml
      apiVersion: kubeadm.k8s.io/v1beta2
      kind: InitConfiguration
      nodeRegistration:
        criSocket: "/var/run/crio/crio.sock"
      --
      apiVersion: kubeadm.k8s.io/v1beta2
      kind: JoinConfiguration
      nodeRegistration:
        criSocket: "/var/run/crio/crio.sock"
      ---
      apiVersion: kubelet.config.k8s.io/v1beta1
      kind: KubeletConfiguration
      featureGates: AllAlpha=false,RunAsGroup=true
      cgroupDriver: systemd
      EOF